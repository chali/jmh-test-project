/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.14.3/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    id("me.champeau.jmh") version "0.7.3"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation(libs.guava)
}

testing {
    suites {
        // Configure the built-in test suite
        val test by getting(JvmTestSuite::class) {
            // Use JUnit Jupiter test framework
            useJUnitJupiter("5.12.1")
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.withType(JavaExec::class).configureEach {
    jvmArgs(
        "-XX:+UnlockDiagnosticVMOptions",
        "-Xlog:class+load=info",
        "-XX:CompileCommand=print,org.example.TestHsdis::*",
        "-XX:CompileCommand=log,org.example.TestHsdis::*",
        "-XX:-UseSuperWord"
    )
}

jmh {
    profilers = listOf("perfasm:intelSyntax=true;hotThreshold=0.05")
    jvmArgs = listOf("-XX:+UnlockExperimentalVMOptions",
                     "-XX:+UnlockDiagnosticVMOptions",
                     "-XX:+PreserveFramePointer",
                     "-XX:+DebugNonSafepoints",
                     "-XX:+UseEpsilonGC")
}
